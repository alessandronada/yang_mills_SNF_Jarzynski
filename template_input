size 8 8 8 8   # Nt Nx Ny Nz

# parallel tempering parameters (ONLY PARALLEL TEMPERING RUNS)
defect_dir    1                # choose direction of defect boundary: 0->t, 1->x, 2->y, 3->z
defect_size   1 1 1            # defect sizes along dirs orthogonal to <defect_dir>, ordered from 0 to 3 (skipping the <defect_dir> direction)
N_replica_pt  1   1.0          # number of parallel tempering replica ___ boundary conditions coefficients

# out-of-equilibrium evolutions parameters (ONLY JARZYNSKI/SNF RUNS)
num_jar_ev      10         # number of out-of-equilibrium evolutions
num_jar_between   1        # number of steps between start of evolutions
num_jar_steps   10         # length of evolution
num_jar_dmeas   10         # measures obs every ... steps DURING evolutions (ONLY FLOWS IN BETA)
jar_beta_target     6.2    # target beta (ONLY FLOWS IN BETA)
protocol_type   0          # 0->linear protocol, otherwise load from protocol_file

# hierarchical update parameters (ONLY PARALLEL TEMPERING RUNS): num of hierarc levels ___ extension of rectangles ___ num of sweeps per rectangle
hierarc_upd 0

# multicanonic parameters (ONLY MULTICANONIC RUNS)
grid_step             0.05
grid_max              5.0
topo_potential_file   ToPotential

# Simulation parameters
beta       6.0     # starting beta for flows in beta
theta      0.0
sample     10
thermal    0
overrelax  4
measevery  1
randseed   42      # (0=time)

start                    0     # 0=ordered  1=random  2=from saved configuration
saveconf_back_every      1     # if 0 does not save, else save backup starting configurations every ... evolutions
saveconf_analysis_every  0     # if 0 does not save, else save starting and final configurations for analysis every ... evolutions

# cooling
coolsteps             5   # number of cooling steps to be used
coolrepeat            10  # number of times <coolsteps> are repeated (=> <coolsteps> * <coolrepeat> cooling steps are done, cool meas taken every <coolsteps> steps)
chi_prime_meas        1   # 1=YES, 0=NO (YES = compute chi_prime, NO = do not compute chi_prime)
topcharge_tprof_meas  1   # 1=YES, 0=NO (YES = compute topcharge_tprof, NO = do not compute topcharge_tprof)

# output files
conf_file                conf.dat
data_file                dati.dat
work_file                work.dat
protocol_file            protocol.dat         # needs to exist if protocol_type different from 0
smearingrho_file         rho.dat              # rho smearing parameters for SNFs
chiprime_data_file       chi_prime_cool.dat   # chi_prime cool measures are written here only if chi_prime_meas==1
topcharge_tprof_file     topo_tprof_cool.dat  # topcharge_tprof cool measures are written here only if topcharge_tprof_meas==1
log_file                 log.dat
swap_acc_file            swap_acc.dat
swap_track_file          swap_track.dat
multicanonic_acc_file    multicanonic_acc.dat
